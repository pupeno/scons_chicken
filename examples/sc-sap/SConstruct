# -*- coding: utf-8 -*-
# Copyright (C) 2005 José Pablo Ezequiel "Pupeno" Fernández Silva
#
# This file is part of scons-chicken.
#
# scons-chicken is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
# scons-chicken is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with scons-chicken; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

# Create an environment including the scons-chicken tool.
env = Environment(tools = ["default", "chicken"], toolpath=["../../"])
# The previous line is to use the non-installed scons-chicken. In your project use:
# env = Environment(tools = ["default", "chicken"])


# Parse the parameters that Chicken tell us we'll need to pass to the C compiler.
env.ParseConfig('chicken-config -libs -cflags -shared')

# Start some checks.
conf = env.Configure(custom_tests = {'CheckChicken' : env.CheckChicken})

# Check if Chicken is present and it can create binaries.
if not conf.CheckChicken():
    print "It seems you don't have Chicken installed or it is not"
    print "installed correctly. For more information:"
    print "http://www.call-with-current-continuation.org/"
    exit(1)


# Add your specific checks here!

# Finished checking.
env = conf.Finish()

# sc-sap (executable binary) made of sc-sap.scm.
scsap = env.Program('sc-sap.scm')

# Install sc-sap.
env.Install('/usr/bin/', scsap)
env.Alias('install', '/usr/bin/')
